-- daily_stats 테이블 생성
CREATE TABLE IF NOT EXISTS daily_stats (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  date DATE NOT NULL UNIQUE,
  post_count INTEGER NOT NULL DEFAULT 0,     -- posts 테이블의 게시글 수
  user_count INTEGER NOT NULL DEFAULT 0,     -- user 테이블의 사용자 수
  visitor_count INTEGER NOT NULL DEFAULT 0,  -- 방문자 테이블의 방문자 수
  unique_visitor_count INTEGER NOT NULL DEFAULT 0,  -- 고유 방문자 수
  
  -- 메타데이터
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- 통계 업데이트 함수 생성
CREATE OR REPLACE FUNCTION public.update_daily_stats()
RETURNS TRIGGER AS $$
BEGIN
  -- 오늘 날짜 데이터 존재 여부 확인
  IF EXISTS (SELECT 1 FROM daily_stats WHERE date = CURRENT_DATE) THEN
    -- 존재하면 업데이트
    UPDATE daily_stats
    SET 
      post_count = (SELECT COUNT(*) FROM posts),
      user_count = (SELECT COUNT(*) FROM users),
      visitor_count = (SELECT COUNT(*) FROM visitors WHERE visit_date = CURRENT_DATE),
      unique_visitor_count = (SELECT COUNT(DISTINCT visitor_id) FROM visitors WHERE visit_date = CURRENT_DATE),
      updated_at = NOW()
    WHERE date = CURRENT_DATE;
  ELSE
    -- 존재하지 않으면 새로 삽입
    INSERT INTO daily_stats (date, post_count, user_count, visitor_count, unique_visitor_count)
    VALUES (
      CURRENT_DATE,
      (SELECT COUNT(*) FROM posts),
      (SELECT COUNT(*) FROM users),
      (SELECT COUNT(*) FROM visitors WHERE visit_date = CURRENT_DATE),
      (SELECT COUNT(DISTINCT visitor_id) FROM visitors WHERE visit_date = CURRENT_DATE)
    );
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- posts 테이블 트리거
DROP TRIGGER IF EXISTS trigger_update_stats_on_posts ON posts;
CREATE TRIGGER trigger_update_stats_on_posts
AFTER INSERT OR UPDATE OR DELETE ON posts
FOR EACH STATEMENT
EXECUTE FUNCTION public.update_daily_stats();

-- users 테이블 트리거
DROP TRIGGER IF EXISTS trigger_update_stats_on_users ON users;
CREATE TRIGGER trigger_update_stats_on_users
AFTER INSERT OR UPDATE OR DELETE ON users
FOR EACH STATEMENT
EXECUTE FUNCTION public.update_daily_stats();

-- visitors 테이블 트리거
DROP TRIGGER IF EXISTS trigger_update_stats_on_visitors ON visitors;
CREATE TRIGGER trigger_update_stats_on_visitors
AFTER INSERT OR UPDATE OR DELETE ON visitors
FOR EACH STATEMENT
EXECUTE FUNCTION public.update_daily_stats();

-- 매 시간마다 통계 업데이트를 위한 함수
CREATE OR REPLACE FUNCTION public.schedule_stats_update()
RETURNS void AS $$
BEGIN
  -- pg_cron 확장이 설치되어 있는지 확인
  IF EXISTS (SELECT 1 FROM pg_extension WHERE extname = 'pg_cron') THEN
    -- 매 시간 0분에 통계 업데이트 실행
    PERFORM cron.schedule('0 * * * *', 'SELECT public.update_daily_stats()');
  END IF;
END;
$$ LANGUAGE plpgsql;

-- 초기 통계 데이터 생성
INSERT INTO daily_stats (date, post_count, user_count, visitor_count, unique_visitor_count)
SELECT 
  CURRENT_DATE,
  (SELECT COUNT(*) FROM posts),
  (SELECT COUNT(*) FROM users),
  (SELECT COUNT(*) FROM visitors WHERE visit_date = CURRENT_DATE),
  (SELECT COUNT(DISTINCT visitor_id) FROM visitors WHERE visit_date = CURRENT_DATE)
WHERE NOT EXISTS (SELECT 1 FROM daily_stats WHERE date = CURRENT_DATE); 